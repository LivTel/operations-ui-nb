/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ngat.opsgui.xcomp;

import java.awt.Color;
import ngat.opsgui.util.StateColorMap;
import ngat.opsgui.util.TimeDisplayController;

/**
 *
 * @author eng
 */
public class OperationsHistoryPanel extends javax.swing.JPanel {

    private static final Color SOCA_COLOR = Color.yellow.darker();
    private static final Color BGCA_COLOR = Color.cyan;
    private static final Color TOCA_COLOR = Color.pink;
    private static final Color CAL_COLOR = Color.magenta.brighter();
    private static final Color WEATHER_COLOR = Color.red;
    private static final Color ENG_COLOR = Color.blue;

    int socaCount = 0;
    int bgcaCount = 0;
    int calCount = 0;
    int tocaCount = 0;
    int engCount = 0;
    int weatherCount = 0;
    int totCount = 0;

    /**
     * Creates new form OperationsHistoryPanel
     */
    public OperationsHistoryPanel() {
        initComponents();
        socaProgess.setForeground(SOCA_COLOR);
        bgcaProgress.setForeground(BGCA_COLOR);
        calProgress.setForeground(CAL_COLOR);
        tocaProgress.setForeground(TOCA_COLOR);
        weatherProgress.setForeground(ENG_COLOR);
        engProgress.setForeground(ENG_COLOR);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusHistoryPanel1 = new ngat.opsgui.util.StatusHistoryPanel();
        timeAxisPanel1 = new ngat.opsgui.util.TimeAxisPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        socaProgess = new javax.swing.JProgressBar();
        bgcaProgress = new javax.swing.JProgressBar();
        calProgress = new javax.swing.JProgressBar();
        tocaProgress = new javax.swing.JProgressBar();
        weatherProgress = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        engProgress = new javax.swing.JProgressBar();

        statusHistoryPanel1.setController(createTimeDisplayController());
        statusHistoryPanel1.setMap(createOperationsStateColorMap());

        javax.swing.GroupLayout statusHistoryPanel1Layout = new javax.swing.GroupLayout(statusHistoryPanel1);
        statusHistoryPanel1.setLayout(statusHistoryPanel1Layout);
        statusHistoryPanel1Layout.setHorizontalGroup(
            statusHistoryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
        );
        statusHistoryPanel1Layout.setVerticalGroup(
            statusHistoryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout timeAxisPanel1Layout = new javax.swing.GroupLayout(timeAxisPanel1);
        timeAxisPanel1.setLayout(timeAxisPanel1Layout);
        timeAxisPanel1Layout.setHorizontalGroup(
            timeAxisPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        timeAxisPanel1Layout.setVerticalGroup(
            timeAxisPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stats"));

        jLabel1.setText("Scheduled");

        jLabel2.setText("Background");

        jLabel3.setText("Calibration");

        jLabel4.setText("ToO");

        jLabel5.setText("Weather");

        jLabel6.setText("Engineering");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(socaProgess, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bgcaProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tocaProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weatherProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(engProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(socaProgess, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(bgcaProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(calProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tocaProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weatherProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(engProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(timeAxisPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusHistoryPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(statusHistoryPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeAxisPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar bgcaProgress;
    private javax.swing.JProgressBar calProgress;
    private javax.swing.JProgressBar engProgress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar socaProgess;
    private ngat.opsgui.util.StatusHistoryPanel statusHistoryPanel1;
    private ngat.opsgui.util.TimeAxisPanel timeAxisPanel1;
    private javax.swing.JProgressBar tocaProgress;
    private javax.swing.JProgressBar weatherProgress;
    // End of variables declaration//GEN-END:variables

    private TimeDisplayController createTimeDisplayController() {
        // TODO this TDC needs to be accessable so we can control panning/zooming etc
        TimeDisplayController tdc = new TimeDisplayController(12 * 3600 * 1000L);
        tdc.addTimeDisplay(statusHistoryPanel1);
        tdc.addTimeDisplay(timeAxisPanel1);

        return tdc;

    }

    private StateColorMap createOperationsStateColorMap() {

        StateColorMap map = new StateColorMap(Color.gray.brighter(), "UNKNOWN");

        // TODO add the colors....
        map.addColorLabel(1, Color.yellow.darker(), "SOCA");
        map.addColorLabel(2, Color.cyan, "BGCA");
        map.addColorLabel(3, Color.magenta.brighter(), "CAL");
         map.addColorLabel(6, Color.pink, "TOCA");
        map.addColorLabel(5, Color.blue, "ENG");
        map.addColorLabel(4, Color.red, "WEATHER");

        return map;

    }

    public void updateState(int state) {
        statusHistoryPanel1.addHistory(System.currentTimeMillis(), state);

        switch (state) {
            case 1:
                socaCount++;
                totCount++;
                break;
            case 2:
                bgcaCount++;
                totCount++;
                break;
            case 3:
                calCount++;
                totCount++;
                break;
            case 4:
                weatherCount++;
                totCount++;
                break;
            case 5:
                engCount++;
                totCount++;
                break;
            case 6:
                tocaCount++;
                totCount++;
                break;
            default:
        }
        // update progessbars
        socaProgess.setValue(socaCount * 100 / totCount);
        bgcaProgress.setValue(bgcaCount * 100 / totCount);
        calProgress.setValue(calCount * 100 / totCount);
        tocaProgress.setValue(tocaCount * 100 / totCount);
        weatherProgress.setValue(weatherCount * 100 / totCount);
        engProgress.setValue(engCount * 100 / totCount);
    }

}
